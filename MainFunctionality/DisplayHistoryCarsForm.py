# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DisplayHistoryCarsForm.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtWidgets

from Clases.AutoService import AutoService
from Clases.signals import signals
from FormDesign.FormHandlers.DisplayHistoryCarsForm_design import Ui_Form


class DisplayHistoryCarsForm(QtWidgets.QWidget, Ui_Form):
    def __init__(self):
        super(DisplayHistoryCarsForm, self).__init__()
        self.setupUi(self)

        self.initializeUI()

        self.autoService = AutoService.get_instance()
        self.selected_services = []

        self.tableWidget.setColumnWidth(1, 225)

        self.populateCarComboBox()
        self.pushButtonAplySort.clicked.connect(self.displayHistory)

        signals.car_added.connect(self.populateCarComboBox)
        # self.displayHistory()  # Доданий виклик методу для відображення історії при запуску програми

    def displayHistory(self):

        try:
            selected_car_index = self.comboBoxForSorting.currentIndex()

            if selected_car_index != -1:
                selected_car = self.autoService.get_cars()[selected_car_index]
                print("Selected car:", selected_car.get_brand(), selected_car.get_model())

                orders = self.autoService.get_car_orders(selected_car)
                print("Orders for selected car:", orders)

                self.tableWidget.clearContents()
                self.tableWidget.setRowCount(0)

                for order in orders:
                    row_position = self.tableWidget.rowCount()
                    self.tableWidget.insertRow(row_position)
                    self.tableWidget.setItem(row_position, 0, QtWidgets.QTableWidgetItem(
                        f"{selected_car.get_brand()} {selected_car.get_model()} {selected_car.get_year()}"))
                    self.tableWidget.setItem(row_position, 1, QtWidgets.QTableWidgetItem(
                        ", ".join(part.get_name() for part in
                                  order.get_ordered_parts())))  # Перетворюємо об'єкти послуг на рядок
                    self.tableWidget.setItem(row_position, 2, QtWidgets.QTableWidgetItem(str(order.get_cost())))
                    self.tableWidget.setItem(row_position, 3, QtWidgets.QTableWidgetItem(order.get_date()))
                    self.tableWidget.setItem(row_position, 4, QtWidgets.QTableWidgetItem(
                        order.get_comment() or ""))
            else:
                print("No car selected.")
        except Exception as e:
            print(e)

    def populateCarComboBox(self):
        self.comboBoxForSorting.clear()
        cars = self.autoService.get_cars()
        for car in cars:
            car_info = f"{car.get_brand()} {car.get_model()} {car.get_year()}"
            self.comboBoxForSorting.addItem(car_info)

    def initializeUI(self):
        self.labelCarChoise.setToolTip("Виберіть автомобіль для перегляду історії обслуговування")
        self.comboBoxForSorting.setToolTip("Виберіть спосіб сортування історії замовлень")
        self.pushButtonAplySort.setToolTip("Натисніть, щоб вивести історію замовлень для вибраного автомобіля")
        self.tableWidget.setToolTip("Таблиця з історією замовлень для вибраного автомобіля")


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = DisplayHistoryCarsForm()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
